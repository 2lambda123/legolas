module mod_test_geometry_override
  use mod_suite_utils
  use funit
  use mod_equilibrium, only: allow_geometry_override
  use mod_global_variables, only: x_start, x_end, geometry, logging_level
  implicit none

contains

  @before
  subroutine init_test()
    use mod_global_variables, only: NaN

    x_start = NaN
    x_end = NaN
    geometry = ""
    logging_level = 1
  end subroutine init_test


  @test
  subroutine test_override_geometry_not_given()
    call set_name("overriding geometry (not given)")
    call allow_geometry_override(default_geometry="test_override")
    @assertEqual("test_override", geometry)
  end subroutine test_override_geometry_not_given


  @test
  subroutine test_override_geometry_equal()
    call set_name("overriding geometry (equal)")
    geometry = "test_equal"
    call allow_geometry_override(default_geometry="test_equal")
    @assertEqual("test_equal", geometry)
  end subroutine test_override_geometry_equal


  @test
  subroutine test_override_geometry_force()
    call set_name("overriding geometry (force)")
    geometry = "test_geometry_1"
    logging_level = 0
    call allow_geometry_override(default_geometry="test_geometry_2")
    @assertEqual("test_geometry_1", geometry)
  end subroutine test_override_geometry_force


  @test
  subroutine test_override_x_start_not_given()
    call set_name("overriding x_start (not given)")
    call allow_geometry_override(default_x_start=0.0d0)
    @assertEqual(0.0d0, x_start)
  end subroutine test_override_x_start_not_given


  @test
  subroutine test_override_x_start_equal()
    call set_name("overriding x_start (equal)")
    x_start = 0.0d0
    call allow_geometry_override(default_x_start=0.0d0)
    @assertEqual(0.0d0, x_start)
  end subroutine test_override_x_start_equal


  @test
  subroutine test_override_x_start_force()
    call set_name("overriding x_start (force)")
    x_start = 1.0d0
    logging_level = 0
    call allow_geometry_override(default_x_start=0.0d0)
    @assertEqual(1.0d0, x_start)
  end subroutine test_override_x_start_force


  @test
  subroutine test_override_x_end_not_given()
    call set_name("overriding x_end (not given)")
    call allow_geometry_override(default_x_end=2.0d0)
    @assertEqual(2.0d0, x_end)
  end subroutine test_override_x_end_not_given


  @test
  subroutine test_override_x_end_equal()
    call set_name("overriding x_end (equal)")
    x_end = 1.0d0
    call allow_geometry_override(default_x_end=1.0d0)
    @assertEqual(1.0d0, x_end)
  end subroutine test_override_x_end_equal


  @test
  subroutine test_override_x_end_force()
    call set_name("overriding x_end (force)")
    x_end = 2.0d0
    logging_level = 0
    call allow_geometry_override(default_x_end=1.0d0)
    @assertEqual(2.0d0, x_end)
  end subroutine test_override_x_end_force
end module mod_test_geometry_override