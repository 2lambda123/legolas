module mod_test_solar_atmosphere
  use mod_suite_utils
  use funit
  use mod_solar_atmosphere, only: set_solar_atmosphere, solar_atmosphere_dealloc
  implicit none

  type(settings_t) :: settings
  type(background_t) :: background

contains

  @before
  subroutine init_test()
    settings = get_settings()
    background = new_background()
    call reset_fields(settings, init_fields=.true.)
    call set_default_units(settings)
    call create_test_grid( &
      settings, geometry="Cartesian", grid_start=0.05d0, grid_end=0.35d0 &
    )
  end subroutine init_test


  @after
  subroutine tear_down()
    call clean_up(settings)
    call settings%delete()
    call background%delete()
    call solar_atmosphere_dealloc()
  end subroutine tear_down


  @test
  subroutine test_sa_invalid_geometry()
    call set_name("solar atmosphere (invalid geometry)")
    call settings%grid%set_geometry("cylindrical")
    call set_solar_atmosphere(settings, background)
    @assertExceptionRaised("solar atmosphere can only be set in Cartesian geometries!")
  end subroutine test_sa_invalid_geometry


  @test
  subroutine test_sa_neg_and_nans()
    use mod_inspections, only: perform_NaN_and_negative_checks
    use mod_equilibrium, only: grav_field
    call set_name("solar atmosphere (NaNs and negative values)")
    call set_solar_atmosphere(settings, background)
    call perform_NaN_and_negative_checks(background, grav_field)
  end subroutine test_sa_neg_and_nans

end module mod_test_solar_atmosphere
