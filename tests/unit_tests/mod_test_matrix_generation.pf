module mod_test_matrix_generation
  use mod_suite_utils
  use funit
  use mod_matrix_structure, only: matrix_t
  use mod_matrix_generation, only: generate_matrix_from_array
  implicit none

  real(dp) :: rmat(4, 4) = reshape( &
    [ &
      3.0d0, 0.0d0, -1.0d0, 0.0d0, & ! column 1
      0.0d0, 1.0d0, 0.0d0, 0.0d0, & ! column 2
      7.0d0, 0.0d0, 2.0d0, -1.0d0, & ! column 3
      -1.0d0, 5.0d0, 8.0d0, 4.0d0 & ! column 4
    ], &
    shape=[4, 4] &
  )
  complex(dp) :: cmat(4, 4) = reshape( &
    [ &
      (2.0d0, 7.0d0), (0.0d0, 0.0d0), (0.0d0, 0.0d0), (2.0d0, -1.0d0), &
      (0.0d0, 0.0d0), (3.0d0, 1.0d0), (0.0d0, 0.0d0), (2.0d0, 2.0d0), &
      (0.0d0, 0.0d0), (0.0d0, 0.0d0), (-2.0d0, 0.0d0), (0.0d0, 0.0d0), &
      (0.0d0, 1.0d0), (1.0d0, 6.0d0), (0.0d0, -1.0d0), (0.0d0, 5.0d0) &
    ], &
    shape=[4, 4] &
  )

  type(matrix_t) :: matrix

contains

  @before
  subroutine init_test()
    call reset_globals()
  end subroutine init_test


  @after
  subroutine tear_down()
    call matrix%delete_matrix()
  end subroutine tear_down


  @test
  subroutine test_generation_real_array_to_matrix()
    call set_name("matrix generation: real array -> matrix")
    matrix = generate_matrix_from_array(array=rmat)
    @assertEqual(count(abs(rmat) > 0.0d0), matrix%get_total_nb_elements())

    @assertEqual(rmat(1, 1), matrix%get_real_element(1, 1), tolerance=TOL)
    @assertEqual(rmat(1, 3), matrix%get_real_element(1, 3), tolerance=TOL)
    @assertEqual(rmat(1, 4), matrix%get_real_element(1, 4), tolerance=TOL)
    @assertEqual(rmat(2, 2), matrix%get_real_element(2, 2), tolerance=TOL)
    @assertEqual(rmat(2, 4), matrix%get_real_element(2, 4), tolerance=TOL)
    @assertEqual(rmat(3, 1), matrix%get_real_element(3, 1), tolerance=TOL)
    @assertEqual(rmat(3, 3), matrix%get_real_element(3, 3), tolerance=TOL)
    @assertEqual(rmat(3, 4), matrix%get_real_element(3, 4), tolerance=TOL)
    @assertEqual(rmat(4, 3), matrix%get_real_element(4, 3), tolerance=TOL)
    @assertEqual(rmat(4, 4), matrix%get_real_element(4, 4), tolerance=TOL)
  end subroutine test_generation_real_array_to_matrix


  @test
  subroutine test_generation_complex_array_to_matrix()
    call set_name("matrix generation: complex array -> matrix")
    matrix = generate_matrix_from_array(array=cmat)
    @assertEqual(9, matrix%get_total_nb_elements())

    @assertEqual(cmat(1, 1), matrix%get_complex_element(1, 1), tolerance=TOL)
    @assertEqual(cmat(1, 4), matrix%get_complex_element(1, 4), tolerance=TOL)
    @assertEqual(cmat(2, 2), matrix%get_complex_element(2, 2), tolerance=TOL)
    @assertEqual(cmat(2, 4), matrix%get_complex_element(2, 4), tolerance=TOL)
    @assertEqual(cmat(3, 3), matrix%get_complex_element(3, 3), tolerance=TOL)
    @assertEqual(cmat(3, 4), matrix%get_complex_element(3, 4), tolerance=TOL)
    @assertEqual(cmat(4, 1), matrix%get_complex_element(4, 1), tolerance=TOL)
    @assertEqual(cmat(4, 2), matrix%get_complex_element(4, 2), tolerance=TOL)
    @assertEqual(cmat(4, 2), matrix%get_complex_element(4, 2), tolerance=TOL)
    @assertEqual(cmat(4, 4), matrix%get_complex_element(4, 4), tolerance=TOL)
  end subroutine test_generation_complex_array_to_matrix

end module mod_test_matrix_generation